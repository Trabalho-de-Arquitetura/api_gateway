spring.application.name=api-gateway
server.port=8080

# Consul Discovery
spring.cloud.consul.host=localhost
spring.cloud.consul.port=8500
spring.cloud.consul.discovery.prefer-ip-address=true

# Configurações do Spring Cloud Gateway (não usaremos para roteamento /graphql direto, mas pode ser útil para outras coisas)
spring.cloud.gateway.server.webflux.discovery.locator.enabled=true
spring.cloud.gateway.server.webflux.discovery.locator.lower-case-service-id=true
spring.main.web-application-type=reactive

# Configurações do GraphQL no Gateway
spring.graphql.http.path=/graphql
spring.graphql.graphiql.enabled=true
spring.graphql.graphiql.path=/graphiql

# URLs base dos microsserviços (serão usadas pelo GraphQLWebClient)
# O 'lb://' usa o load balancing do Spring Cloud (com Consul)
# Em api-gateway/src/main/resources/application.properties
app.service.users.baseurl=http://users-service
app.service.groups.baseurl=http://groups-service
app.service.projects.baseurl=http://projects-service
# app.service.auth.baseurl=http://auth-service # Se você também usa HttpGraphQlClient para ele

logging.level.org.springframework.cloud.loadbalancer=DEBUG
logging.level.org.springframework.cloud.consul=DEBUG